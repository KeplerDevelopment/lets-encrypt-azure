// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Apimanagement
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Reports.
    /// </summary>
    public static partial class ReportsExtensions
    {
            /// <summary>
            /// Lists report records by API.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListByApi(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListByApiAsync(resourceGroupName, serviceName, filter, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by API.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByApiAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByApiWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by User.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| userId | select, filter | eq |     |
            /// &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| productId |
            /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     |
            /// &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter
            /// | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListByUser(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListByUserAsync(resourceGroupName, serviceName, filter, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by User.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| userId | select, filter | eq |     |
            /// &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| productId |
            /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     |
            /// &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId | filter
            /// | eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByUserAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByUserWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by API Operations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter |
            /// eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;|
            /// apiId | filter | eq |     | &lt;/br&gt;| operationId | select, filter | eq
            /// |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListByOperation(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListByOperationAsync(resourceGroupName, serviceName, filter, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by API Operations.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | filter |
            /// eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;|
            /// apiId | filter | eq |     | &lt;/br&gt;| operationId | select, filter | eq
            /// |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByOperationAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByOperationWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by Product.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | select,
            /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListByProduct(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListByProductAsync(resourceGroupName, serviceName, filter, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by Product.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId | select,
            /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByProductAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByProductWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by geography.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| country | select |     |
            /// | &lt;/br&gt;| region | select |     |     | &lt;/br&gt;| zip | select |
            /// |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId |
            /// filter | eq |     | &lt;/br&gt;| productId | filter | eq |     |
            /// &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId |
            /// filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;|
            /// callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed |
            /// select |     |     | &lt;/br&gt;| callCountOther | select |     |     |
            /// &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;|
            /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select
            /// |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
            /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |
            /// | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;|
            /// serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select
            /// |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            public static ReportCollection ListByGeo(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?))
            {
                return operations.ListByGeoAsync(resourceGroupName, serviceName, filter, top, skip).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by geography.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| country | select |     |
            /// | &lt;/br&gt;| region | select |     |     | &lt;/br&gt;| zip | select |
            /// |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;| userId |
            /// filter | eq |     | &lt;/br&gt;| productId | filter | eq |     |
            /// &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId |
            /// filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;|
            /// callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed |
            /// select |     |     | &lt;/br&gt;| callCountOther | select |     |     |
            /// &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;|
            /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select
            /// |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
            /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |
            /// | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;|
            /// serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select
            /// |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByGeoAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByGeoWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| productId |
            /// select, filter | eq |     | &lt;/br&gt;| subscriptionId | select, filter |
            /// eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListBySubscription(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListBySubscriptionAsync(resourceGroupName, serviceName, filter, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName | select,
            /// orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
            /// &lt;/br&gt;| userId | select, filter | eq |     | &lt;/br&gt;| productId |
            /// select, filter | eq |     | &lt;/br&gt;| subscriptionId | select, filter |
            /// eq |     | &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
            /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
            /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;| callCountOther
            /// | select, orderBy |     |     | &lt;/br&gt;| callCountTotal | select,
            /// orderBy |     |     | &lt;/br&gt;| bandwidth | select, orderBy |     |
            /// | &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
            /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg | select,
            /// orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |     |     |
            /// &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg
            /// | select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |     |
            /// &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListBySubscriptionAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by Time.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter, select | ge, le |     | &lt;/br&gt;| interval | select
            /// |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;|
            /// userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     |
            /// &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId |
            /// filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;|
            /// callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed |
            /// select |     |     | &lt;/br&gt;| callCountOther | select |     |     |
            /// &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;|
            /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select
            /// |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
            /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |
            /// | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;|
            /// serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select
            /// |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='interval'>
            /// By time interval. Interval must be multiple of 15 minutes and may not be
            /// zero. The value should be in ISO  8601 format
            /// (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to
            /// convert TimeSpan to a valid interval string: XmlConvert.ToString(new
            /// TimeSpan(hours, minutes, seconds)).
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            public static ReportCollection ListByTime(this IReports operations, string resourceGroupName, string serviceName, string filter, System.TimeSpan interval, int? top = default(int?), int? skip = default(int?), string orderby = default(string))
            {
                return operations.ListByTimeAsync(resourceGroupName, serviceName, filter, interval, top, skip, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by Time.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter, select | ge, le |     | &lt;/br&gt;| interval | select
            /// |     |     | &lt;/br&gt;| apiRegion | filter | eq |     | &lt;/br&gt;|
            /// userId | filter | eq |     | &lt;/br&gt;| productId | filter | eq |     |
            /// &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;| apiId |
            /// filter | eq |     | &lt;/br&gt;| operationId | filter | eq |     |
            /// &lt;/br&gt;| callCountSuccess | select |     |     | &lt;/br&gt;|
            /// callCountBlocked | select |     |     | &lt;/br&gt;| callCountFailed |
            /// select |     |     | &lt;/br&gt;| callCountOther | select |     |     |
            /// &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;|
            /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount | select
            /// |     |     | &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
            /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select |     |
            /// | &lt;/br&gt;| serviceTimeAvg | select |     |     | &lt;/br&gt;|
            /// serviceTimeMin | select |     |     | &lt;/br&gt;| serviceTimeMax | select
            /// |     |     | &lt;/br&gt;
            /// </param>
            /// <param name='interval'>
            /// By time interval. Interval must be multiple of 15 minutes and may not be
            /// zero. The value should be in ISO  8601 format
            /// (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to
            /// convert TimeSpan to a valid interval string: XmlConvert.ToString(new
            /// TimeSpan(hours, minutes, seconds)).
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='orderby'>
            /// OData order by query option.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ReportCollection> ListByTimeAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, System.TimeSpan interval, int? top = default(int?), int? skip = default(int?), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByTimeWithHttpMessagesAsync(resourceGroupName, serviceName, filter, interval, top, skip, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists report records by Request.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| apiId | filter | eq |
            /// | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| productId |
            /// filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;|
            /// apiRegion | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |
            /// | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            public static RequestReportCollection ListByRequest(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?))
            {
                return operations.ListByRequestAsync(resourceGroupName, serviceName, filter, top, skip).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists report records by Request.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the API Management service.
            /// </param>
            /// <param name='filter'>
            /// |   Field     |     Usage     |     Supported operators     |     Supported
            /// functions
            /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
            /// timestamp | filter | ge, le |     | &lt;/br&gt;| apiId | filter | eq |
            /// | &lt;/br&gt;| operationId | filter | eq |     | &lt;/br&gt;| productId |
            /// filter | eq |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;|
            /// apiRegion | filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |
            /// | &lt;/br&gt;
            /// </param>
            /// <param name='top'>
            /// Number of records to return.
            /// </param>
            /// <param name='skip'>
            /// Number of records to skip.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RequestReportCollection> ListByRequestAsync(this IReports operations, string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByRequestWithHttpMessagesAsync(resourceGroupName, serviceName, filter, top, skip, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
