// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Apimanagement
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// NotificationRecipientUser operations.
    /// </summary>
    public partial interface INotificationRecipientUser
    {
        /// <summary>
        /// Gets the list of the Notification Recipient User subscribed to the
        /// notification.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='notificationName'>
        /// Notification Name Identifier. Possible values include:
        /// 'RequestPublisherNotificationMessage',
        /// 'PurchasePublisherNotificationMessage',
        /// 'NewApplicationNotificationMessage', 'BCC',
        /// 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
        /// 'QuotaLimitApproachingPublisherNotificationMessage'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<RecipientUserCollection>> ListByNotificationWithHttpMessagesAsync(string resourceGroupName, string serviceName, string notificationName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Determine if the Notification Recipient User is subscribed to the
        /// notification.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='notificationName'>
        /// Notification Name Identifier. Possible values include:
        /// 'RequestPublisherNotificationMessage',
        /// 'PurchasePublisherNotificationMessage',
        /// 'NewApplicationNotificationMessage', 'BCC',
        /// 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
        /// 'QuotaLimitApproachingPublisherNotificationMessage'
        /// </param>
        /// <param name='userId'>
        /// User identifier. Must be unique in the current API Management
        /// service instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> CheckEntityExistsWithHttpMessagesAsync(string resourceGroupName, string serviceName, string notificationName, string userId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds the API Management User to the list of Recipients for the
        /// Notification.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='notificationName'>
        /// Notification Name Identifier. Possible values include:
        /// 'RequestPublisherNotificationMessage',
        /// 'PurchasePublisherNotificationMessage',
        /// 'NewApplicationNotificationMessage', 'BCC',
        /// 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
        /// 'QuotaLimitApproachingPublisherNotificationMessage'
        /// </param>
        /// <param name='userId'>
        /// User identifier. Must be unique in the current API Management
        /// service instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<RecipientUserContract>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string serviceName, string notificationName, string userId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the API Management user from the list of Notification.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='notificationName'>
        /// Notification Name Identifier. Possible values include:
        /// 'RequestPublisherNotificationMessage',
        /// 'PurchasePublisherNotificationMessage',
        /// 'NewApplicationNotificationMessage', 'BCC',
        /// 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
        /// 'QuotaLimitApproachingPublisherNotificationMessage'
        /// </param>
        /// <param name='userId'>
        /// User identifier. Must be unique in the current API Management
        /// service instance.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string serviceName, string notificationName, string userId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
