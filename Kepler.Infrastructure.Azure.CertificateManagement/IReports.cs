// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Apimanagement
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Reports operations.
    /// </summary>
    public partial interface IReports
    {
        /// <summary>
        /// Lists report records by API.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the operation.
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByApiWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by User.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName |
        /// select, orderBy |     |     | &lt;/br&gt;| userId | select, filter
        /// | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     |
        /// &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;|
        /// subscriptionId | filter | eq |     | &lt;/br&gt;| apiId | filter |
        /// eq |     | &lt;/br&gt;| operationId | filter | eq |     |
        /// &lt;/br&gt;| callCountSuccess | select, orderBy |     |     |
        /// &lt;/br&gt;| callCountBlocked | select, orderBy |     |     |
        /// &lt;/br&gt;| callCountFailed | select, orderBy |     |     |
        /// &lt;/br&gt;| callCountOther | select, orderBy |     |     |
        /// &lt;/br&gt;| callCountTotal | select, orderBy |     |     |
        /// &lt;/br&gt;| bandwidth | select, orderBy |     |     | &lt;/br&gt;|
        /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount |
        /// select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |
        /// |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;|
        /// apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg |
        /// select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |
        /// | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByUserWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by API Operations.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName |
        /// select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq
        /// |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;|
        /// productId | filter | eq |     | &lt;/br&gt;| subscriptionId |
        /// filter | eq |     | &lt;/br&gt;| apiId | filter | eq |     |
        /// &lt;/br&gt;| operationId | select, filter | eq |     | &lt;/br&gt;|
        /// callCountSuccess | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountOther | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountTotal | select, orderBy |     |     | &lt;/br&gt;|
        /// bandwidth | select, orderBy |     |     | &lt;/br&gt;|
        /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount |
        /// select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |
        /// |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;|
        /// apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg |
        /// select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |
        /// | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByOperationWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by Product.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName |
        /// select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq
        /// |     | &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;|
        /// productId | select, filter | eq |     | &lt;/br&gt;| subscriptionId
        /// | filter | eq |     | &lt;/br&gt;| callCountSuccess | select,
        /// orderBy |     |     | &lt;/br&gt;| callCountBlocked | select,
        /// orderBy |     |     | &lt;/br&gt;| callCountFailed | select,
        /// orderBy |     |     | &lt;/br&gt;| callCountOther | select, orderBy
        /// |     |     | &lt;/br&gt;| callCountTotal | select, orderBy |     |
        /// | &lt;/br&gt;| bandwidth | select, orderBy |     |     |
        /// &lt;/br&gt;| cacheHitsCount | select |     |     | &lt;/br&gt;|
        /// cacheMissCount | select |     |     | &lt;/br&gt;| apiTimeAvg |
        /// select, orderBy |     |     | &lt;/br&gt;| apiTimeMin | select |
        /// |     | &lt;/br&gt;| apiTimeMax | select |     |     | &lt;/br&gt;|
        /// serviceTimeAvg | select |     |     | &lt;/br&gt;| serviceTimeMin |
        /// select |     |     | &lt;/br&gt;| serviceTimeMax | select |     |
        /// | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByProductWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by geography.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| country | select |
        /// |     | &lt;/br&gt;| region | select |     |     | &lt;/br&gt;| zip
        /// | select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
        /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId |
        /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |
        /// | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId
        /// | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |
        /// |     | &lt;/br&gt;| callCountBlocked | select |     |     |
        /// &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;|
        /// callCountOther | select |     |     | &lt;/br&gt;| bandwidth |
        /// select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select
        /// |     |     | &lt;/br&gt;| cacheMissCount | select |     |     |
        /// &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
        /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select
        /// |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     |
        /// &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;|
        /// serviceTimeMax | select |     |     | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByGeoWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by subscription.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| displayName |
        /// select, orderBy |     |     | &lt;/br&gt;| apiRegion | filter | eq
        /// |     | &lt;/br&gt;| userId | select, filter | eq |     |
        /// &lt;/br&gt;| productId | select, filter | eq |     | &lt;/br&gt;|
        /// subscriptionId | select, filter | eq |     | &lt;/br&gt;|
        /// callCountSuccess | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountBlocked | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountFailed | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountOther | select, orderBy |     |     | &lt;/br&gt;|
        /// callCountTotal | select, orderBy |     |     | &lt;/br&gt;|
        /// bandwidth | select, orderBy |     |     | &lt;/br&gt;|
        /// cacheHitsCount | select |     |     | &lt;/br&gt;| cacheMissCount |
        /// select |     |     | &lt;/br&gt;| apiTimeAvg | select, orderBy |
        /// |     | &lt;/br&gt;| apiTimeMin | select |     |     | &lt;/br&gt;|
        /// apiTimeMax | select |     |     | &lt;/br&gt;| serviceTimeAvg |
        /// select |     |     | &lt;/br&gt;| serviceTimeMin | select |     |
        /// | &lt;/br&gt;| serviceTimeMax | select |     |     | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListBySubscriptionWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by Time.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter, select | ge, le |     | &lt;/br&gt;| interval |
        /// select |     |     | &lt;/br&gt;| apiRegion | filter | eq |     |
        /// &lt;/br&gt;| userId | filter | eq |     | &lt;/br&gt;| productId |
        /// filter | eq |     | &lt;/br&gt;| subscriptionId | filter | eq |
        /// | &lt;/br&gt;| apiId | filter | eq |     | &lt;/br&gt;| operationId
        /// | filter | eq |     | &lt;/br&gt;| callCountSuccess | select |
        /// |     | &lt;/br&gt;| callCountBlocked | select |     |     |
        /// &lt;/br&gt;| callCountFailed | select |     |     | &lt;/br&gt;|
        /// callCountOther | select |     |     | &lt;/br&gt;| bandwidth |
        /// select, orderBy |     |     | &lt;/br&gt;| cacheHitsCount | select
        /// |     |     | &lt;/br&gt;| cacheMissCount | select |     |     |
        /// &lt;/br&gt;| apiTimeAvg | select |     |     | &lt;/br&gt;|
        /// apiTimeMin | select |     |     | &lt;/br&gt;| apiTimeMax | select
        /// |     |     | &lt;/br&gt;| serviceTimeAvg | select |     |     |
        /// &lt;/br&gt;| serviceTimeMin | select |     |     | &lt;/br&gt;|
        /// serviceTimeMax | select |     |     | &lt;/br&gt;
        /// </param>
        /// <param name='interval'>
        /// By time interval. Interval must be multiple of 15 minutes and may
        /// not be zero. The value should be in ISO  8601 format
        /// (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be
        /// used to convert TimeSpan to a valid interval string:
        /// XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)).
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='orderby'>
        /// OData order by query option.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReportCollection>> ListByTimeWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, System.TimeSpan interval, int? top = default(int?), int? skip = default(int?), string orderby = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists report records by Request.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='filter'>
        /// |   Field     |     Usage     |     Supported operators     |
        /// Supported functions
        /// |&lt;/br&gt;|-------------|-------------|-------------|-------------|&lt;/br&gt;|
        /// timestamp | filter | ge, le |     | &lt;/br&gt;| apiId | filter |
        /// eq |     | &lt;/br&gt;| operationId | filter | eq |     |
        /// &lt;/br&gt;| productId | filter | eq |     | &lt;/br&gt;| userId |
        /// filter | eq |     | &lt;/br&gt;| apiRegion | filter | eq |     |
        /// &lt;/br&gt;| subscriptionId | filter | eq |     | &lt;/br&gt;
        /// </param>
        /// <param name='top'>
        /// Number of records to return.
        /// </param>
        /// <param name='skip'>
        /// Number of records to skip.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<RequestReportCollection>> ListByRequestWithHttpMessagesAsync(string resourceGroupName, string serviceName, string filter, int? top = default(int?), int? skip = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
